

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>DaDevLog</title>
  <subtitle>아자아자 화이팅</subtitle>
  <updated>2025-01-09T19:19:08+09:00</updated>
  <author>
    <name>HaDaHyeon</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator>
  <rights> © 2025 HaDaHyeon </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>예전 블로그</title>
    <link href="http://localhost:4000/posts/oldBlog/" rel="alternate" type="text/html" title="예전 블로그" />
    <published>2025-01-09T18:10:00+09:00</published>
  
    <updated>2025-01-09T18:10:00+09:00</updated>
  
    <id>http://localhost:4000/posts/oldBlog/</id>
    <content type="text/html" src="http://localhost:4000/posts/oldBlog/" />
    <author>
      <name>HaDaHyeon</name>
    </author>

  
    
    <category term="Old Blog" />
    
  

  <summary>https://blog.naver.com/hada0413/</summary>

  </entry>

  
  <entry>
    <title>이분탐색/이진탐색</title>
    <link href="http://localhost:4000/posts/first/" rel="alternate" type="text/html" title="이분탐색/이진탐색" />
    <published>2025-01-09T15:10:00+09:00</published>
  
    <updated>2025-01-09T15:10:00+09:00</updated>
  
    <id>http://localhost:4000/posts/first/</id>
    <content type="text/html" src="http://localhost:4000/posts/first/" />
    <author>
      <name>HaDaHyeon</name>
    </author>

  
    
    <category term="Algorithm" />
    
    <category term="Theory" />
    
  

  <summary>기본 개념

  배열 내부의 값이 정렬이 되어 있을 때 사용 가능하다
  변수 3개(start, mid, end)를 이용하여 원하는 값을 찾는 알고리즘 이다
  시간복잡도: O(logN), n은 이분 탐색을 진행하는 리스트의 크기




반복문을 이용한 구현
def binarySearch(array, start, end, k):
    while start &amp;amp;lt;= end:
        mid = (start + end) // 2
        if array[mid] == k:
            return mid
        elif array[mid] &amp;amp;gt; k:
            end = mid - 1
        else:
            start = mid + 1
 ...</summary>

  </entry>

</feed>


